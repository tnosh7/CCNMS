<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="digging">
	<insert id="insertDigging">
		INSERT INTO DIGGING(
			WRITER,
			SUBJECT,
			CONTENT,
			DIGGING_TOPIC,
			FILE,
			ENROLL_DT
		)
		VALUES (
			#{writer},
			#{subject},
			#{content},
			#{diggingTopic},
			#{file},
			NOW()
		)	
	</insert>
	<select id="selectListDiggingList" parameterType="hashmap"  resultType="DiggingDTO">
		<choose>
			<when test='search.equals("")'>
				SELECT 
						*
				FROM 
					DIGGING
				WHERE 
					DIGGING_TOPIC = #{diggingTopic}
				ORDER BY 
				<if test='sort == "readCnt"'>
					READ_CNT DESC	
				</if> 
				<if test='sort== "thumbsUp"'>
					THUMBS_UP DESC	
				</if> 
				<if test='sort == "recent"'>
					DIGGING_ID DESC	
				</if>
				<if test='sort == null'>
					DIGGING_ID DESC	
				</if>	
				LIMIT 
					#{startDiggingIdx}, #{onePageViewCnt}	
			</when>
			<otherwise>
				SELECT 
						*
				FROM 
					DIGGING
				WHERE 
					DIGGING_TOPIC = #{diggingTopic} AND
					SUBJECT LIKE CONCAT('%', #{search}, '%') OR
					WRITER LIKE CONCAT('%', #{search}, '%') OR
					CONTENT LIKE CONCAT('%', #{search}, '%')
				ORDER BY 
				<if test='sort == "readCnt"'>
					READ_CNT DESC	
				</if> 
				<if test='sort== "thumbsUp"'>
					THUMBS_UP DESC	
				</if> 
				<if test='sort == "recent"'>
					DIGGING_ID DESC	
				</if>
				<if test='sort == null'>
					DIGGING_ID DESC	
				</if>	 
				LIMIT 
					#{startDiggingIdx}, #{onePageViewCnt}
			</otherwise>
			</choose>
	</select>

	<select id="selectListPopulerList" parameterType="hashmap"  resultType="DiggingDTO">
		SELECT 
				*
		FROM 
			DIGGING
		WHERE 
			DIGGING_TOPIC = #{diggingTopic} 
			AND
			ENROLL_DT >= DATE_SUB(NOW(),INTERVAL 7 DAY)
		ORDER BY 
			READ_CNT DESC
		LIMIT 3
	</select>
	<select id="selectOneDiggingCnt" parameterType="String" resultType="int">
		<choose>
			<when test='search.equals("")'>
				SELECT 
					COUNT(*)
				FROM 
					DIGGING
			</when>
			<otherwise>
				SELECT 
					COUNT(*)
				FROM 
					DIGGING
				WHERE 
					SUBJECT LIKE CONCATE('%', #{search}, '%') OR
					WRITER LIKE CONCATE('%', #{search}, '%') OR 
					CONTENT LIKE CONCATE('%', #{search}, '%')			
			</otherwise>
		</choose>
	</select>
	
	<select id="selectListUser" parameterType="String"  resultType="DiggingDTO">
		SELECT 
				*
		FROM 
			USER
		WHERE 
			USER_ID = (SELECT WRITER FROM DIGGING)
	</select>
	
	<select id="selectDiggingDetail" parameterType="long" resultType="DiggingDTO">
		SELECT 
			*
		FROM 
			DIGGING
		WHERE 
			DIGGING_ID = #{diggingId}
	</select>
	<update id="updateReadCnt">
		UPDATE DIGGING
		SET 
			READ_CNT = READ_CNT + 1
		WHERE 
			DIGGING_ID = #{diggingId}
	</update>
	
	<update id="updateThumbsUp" parameterType="long">
		UPDATE DIGGING
		SET 
			THUMBS_UP = THUMBS_UP + 1 
		WHERE 
			DIGGING_ID = #{diggingId}
	</update>
	
	<update id="updateLikePoint" parameterType="String">
		UPDATE USER
		SET 
			LIKE_POINT = LIKE_POINT + 1 
		WHERE 
			USER_ID = #{writer}
	</update>
	
	<select id="selectOneAllReplyCnt" parameterType="long" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			REPLY
		WHERE
			DIGGING_ID = #{diggingId}	
	</select>
	
	<select id="selectListReplyList" parameterType="long" resultType="ReplyDTO">
		SELECT 
			*
		FROM 
			REPLY
		WHERE
			DIGGING_ID = #{diggingId}
	</select>

	<select id="selectListRecentList" parameterType="String" resultType="DiggingDTO">
		SELECT 
			*
		FROM 
			DIGGING
		WHERE
			DIGGING_TOPIC = #{diggingTopic}
		ORDER BY
		 	ENROLL_DT DESC
		LIMIT 3
	</select>
	
	<update id="updateModifyDigging" parameterType="DiggingDTO">
		UPDATE 
			DIGGING
		<set>
			<if test='subject != null and subject!=""'>
				SUBJECT = #{subject},
			</if>
			<if test='content != null and content != ""'>
				CONTENT = #{content},
			</if>
			<if test='file != null and file != ""'>
				file = #{file},
			</if>
			<if test='diggingTopic != null and diggingTopic != ""'>
				DIGGING_TOPIC = #{diggingTopic}
			</if>
		</set>
		WHERE 
			DIGGING_ID = #{diggingId}			
	</update>
	<delete id="deleteDigging" parameterType="long">
		DELETE FROM 
				DIGGING
		WHERE
			DIGGING_ID = #{diggingId}
	
	</delete>
</mapper>